// 索引从1开始，W是重量，n是物品
int backPack(int w, int n, vector<int> &wt, vector<int> &val) {
    vector<vector<int>> dp(N + 1, vector<int>(W + 1, 0));
    for (int i = 1; i <= n, ++i) {
        for (int j = 1; j < w, ++j) {
            // 当前背包容量不足，只能选择不装
            if (j - wt[i - 1] < 0)
                dp[i][j] = dp[i - 1][j];
            dp[i][j] = max(
                    // 不放
                    dp[i - 1][j],
                    // 放，在装第i个物品的前提下，背包能装的最大价值时多少
                    dp[i - 1][j - wt(i - 1)] + val(i - 1);
            );
        }
    }
    return dp[n][w]
}

重点在放的时候的dp处理